{"ast":null,"code":"var _jsxFileName = \"/Users/johyeonmin/Documents/fastapi-socketio-wb38-main/web/src/page/stream.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Stream({\n  socket\n}) {\n  _s();\n  const [roomName, setRoomName] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  useEffect(() => {\n    const handleReadyForStreamSuccess = ({\n      roomName\n    }) => {\n      console.log(\"ready for stream success\");\n      console.log(roomName);\n      socket.emit(\"join_room\", roomName);\n    };\n    socket.on(\"readyForStreamSuccess\", handleReadyForStreamSuccess);\n    socket.on(\"user_join\", data => {\n      console.log(\"New user join\", data);\n    });\n\n    // useEffect의 cleanup 함수를 사용하여 컴포넌트가 언마운트될 때 리스너를 제거\n    return () => {\n      socket.off(\"readyForStreamSuccess\", handleReadyForStreamSuccess);\n    };\n  }, [socket]); // socket이 변경될 때마다 useEffect를 다시 실행\n\n  const readyForStream = event => {\n    event.preventDefault();\n    if (roomName.trim() && userName.trim()) {\n      socket.emit(\"readyForStream\", roomName, userName);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: readyForStream,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: roomName,\n        onChange: e => setRoomName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: userName,\n        onChange: e => setUserName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Join!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(Stream, \"N7anKAxZoio56CXzOcGzmNkoUi0=\");\n_c = Stream;\nexport default Stream;\nvar _c;\n$RefreshReg$(_c, \"Stream\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Stream","socket","_s","roomName","setRoomName","userName","setUserName","handleReadyForStreamSuccess","console","log","emit","on","data","off","readyForStream","event","preventDefault","trim","children","onSubmit","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/Users/johyeonmin/Documents/fastapi-socketio-wb38-main/web/src/page/stream.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction Stream({ socket }) {\n  const [roomName, setRoomName] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n\n  useEffect(() => {\n    const handleReadyForStreamSuccess = ({ roomName }) => {\n      console.log(\"ready for stream success\");\n      console.log(roomName);\n      socket.emit(\"join_room\", roomName);\n    };\n\n    socket.on(\"readyForStreamSuccess\", handleReadyForStreamSuccess);\n\n    socket.on(\"user_join\", (data) => {\n      console.log(\"New user join\", data);\n    });\n\n    // useEffect의 cleanup 함수를 사용하여 컴포넌트가 언마운트될 때 리스너를 제거\n    return () => {\n      socket.off(\"readyForStreamSuccess\", handleReadyForStreamSuccess);\n    };\n  }, [socket]); // socket이 변경될 때마다 useEffect를 다시 실행\n\n  const readyForStream = (event) => {\n    event.preventDefault();\n\n    if (roomName.trim() && userName.trim()) {\n      socket.emit(\"readyForStream\", roomName, userName);\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={readyForStream}>\n        <input value={roomName} onChange={(e) => setRoomName(e.target.value)} />\n        <input value={userName} onChange={(e) => setUserName(e.target.value)} />\n        <button type=\"submit\">Join!</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Stream;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,MAAMA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMU,2BAA2B,GAAGA,CAAC;MAAEJ;IAAS,CAAC,KAAK;MACpDK,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACvCD,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;MACrBF,MAAM,CAACS,IAAI,CAAC,WAAW,EAAEP,QAAQ,CAAC;IACpC,CAAC;IAEDF,MAAM,CAACU,EAAE,CAAC,uBAAuB,EAAEJ,2BAA2B,CAAC;IAE/DN,MAAM,CAACU,EAAE,CAAC,WAAW,EAAGC,IAAI,IAAK;MAC/BJ,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEG,IAAI,CAAC;IACpC,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACXX,MAAM,CAACY,GAAG,CAAC,uBAAuB,EAAEN,2BAA2B,CAAC;IAClE,CAAC;EACH,CAAC,EAAE,CAACN,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEd,MAAMa,cAAc,GAAIC,KAAK,IAAK;IAChCA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,IAAIb,QAAQ,CAACc,IAAI,CAAC,CAAC,IAAIZ,QAAQ,CAACY,IAAI,CAAC,CAAC,EAAE;MACtChB,MAAM,CAACS,IAAI,CAAC,gBAAgB,EAAEP,QAAQ,EAAEE,QAAQ,CAAC;IACnD;EACF,CAAC;EAED,oBACEN,OAAA;IAAAmB,QAAA,eACEnB,OAAA;MAAMoB,QAAQ,EAAEL,cAAe;MAAAI,QAAA,gBAC7BnB,OAAA;QAAOqB,KAAK,EAAEjB,QAAS;QAACkB,QAAQ,EAAGC,CAAC,IAAKlB,WAAW,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxE5B,OAAA;QAAOqB,KAAK,EAAEf,QAAS;QAACgB,QAAQ,EAAGC,CAAC,IAAKhB,WAAW,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxE5B,OAAA;QAAQ6B,IAAI,EAAC,QAAQ;QAAAV,QAAA,EAAC;MAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACzB,EAAA,CAxCQF,MAAM;AAAA6B,EAAA,GAAN7B,MAAM;AA0Cf,eAAeA,MAAM;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}