{"ast":null,"code":"var _jsxFileName = \"/Users/johyeonmin/Documents/fastapi-socketio-wb38-main/web/src/page/stream.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Stream({\n  socket\n}) {\n  _s();\n  // 상태 관리\n  const [roomName, setRoomName] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [streamState, setStreamState] = useState(false);\n  const [audioState, setAudioState] = useState(true);\n  const [videoState, setVideoState] = useState(true);\n  let peerList = [];\n\n  // 미디어 제약 조건 정의\n  const mediaConstraints = {\n    audio: true,\n    video: {\n      height: 360\n    }\n  };\n\n  // 스트림 시작 함수\n  const startStream = () => {\n    navigator.mediaDevices.getUserMedia(mediaConstraints).then(stream => {\n      const myVideo = document.getElementById(\"local_vid\");\n      myVideo.srcObject = stream;\n      setStreamState(true);\n      setAudioMuteState(!audioState);\n      setVideoMuteState(!videoState);\n    }).catch(error => {\n      console.log(`startStream Error ${error}`);\n    });\n  };\n\n  // 오디오 음소거 설정 함수\n  const setAudioMuteState = flag => {\n    let muteIcon = document.getElementById(\"aud_mute_icon\");\n    if (muteIcon) {\n      let localStream = document.getElementById(\"local_vid\").srcObject;\n      localStream.getAudioTracks().forEach(track => {\n        track.enabled = !flag;\n      });\n      setAudioState(flag);\n    }\n  };\n\n  // 비디오 음소거 설정 함수\n  const setVideoMuteState = flag => {\n    let vidMuteIcon = document.getElementById(\"vid_mute_icon\");\n    if (vidMuteIcon) {\n      let localStream = document.getElementById(\"local_vid\").srcObject;\n      localStream.getVideoTracks().forEach(track => {\n        track.enabled = !flag;\n      });\n      setVideoState(flag);\n    }\n  };\n\n  // 스트림 준비 이벤트 핸들러\n  const readyForStream = event => {\n    event.preventDefault();\n    startStream();\n    if (roomName.trim() && userName.trim()) {\n      socket.emit(\"readyForStream\", roomName, userName);\n    }\n  };\n\n  // useEffect를 사용하여 소켓 이벤트 핸들러 설정\n  useEffect(() => {\n    const handleReadyForStreamSuccess = ({\n      roomName\n    }) => {\n      console.log(\"ready for stream success\");\n      console.log(roomName);\n      socket.emit(\"join_room\", roomName);\n    };\n    const handleUserJoin = ({\n      sid,\n      userName\n    }) => {\n      if (sid) {\n        console.log(`user join: ${sid}, ${userName}`);\n        let peerId = sid;\n        let peerName = userName;\n        peerList[peerId] = undefined;\n        addVideoElement(peerId, peerName);\n      } else {\n        console.error(\"Invalid data structure or missing 'sid' property\");\n      }\n    };\n\n    // 비디오 엘리먼트 추가 함수\n    function addVideoElement(element_id, display_name) {\n      const videoElement = makeVideoElementCustom(element_id, display_name);\n      document.getElementById(\"video_grid\").appendChild(videoElement);\n    }\n\n    // 커스텀 비디오 엘리먼트 생성 함수\n    function makeVideoElementCustom(element_id, display_name) {\n      let vid = document.createElement(\"video\");\n      vid.id = \"vid_\" + element_id;\n      vid.autoplay = true;\n      return vid;\n    }\n\n    // 소켓 이벤트 리스너 등록\n    socket.on(\"readyForStreamSuccess\", handleReadyForStreamSuccess);\n    socket.on(\"user_join\", handleUserJoin);\n\n    // 컴포넌트 언마운트 시 리스너 제거\n    return () => {\n      socket.off(\"readyForStreamSuccess\", handleReadyForStreamSuccess);\n    };\n  }, [socket]); // socket이 변경될 때마다 useEffect 실행\n\n  // JSX 반환\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: readyForStream,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: roomName,\n        onChange: e => setRoomName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: userName,\n        onChange: e => setUserName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Join!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"video_grid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      id: \"local_vid\",\n      autoPlay: true,\n      playsInline: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"aud_mute_icon\",\n      onClick: () => setAudioMuteState(!audioState),\n      children: audioState ? \"Unmute Audio\" : \"Mute Audio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"vid_mute_icon\",\n      onClick: () => setVideoMuteState(!videoState),\n      children: videoState ? \"unMute Video\" : \"Mute Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n_s(Stream, \"5kZtQHrBgIJZmp6ueNk0UFTF7ag=\");\n_c = Stream;\nexport default Stream;\nvar _c;\n$RefreshReg$(_c, \"Stream\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Stream","socket","_s","roomName","setRoomName","userName","setUserName","streamState","setStreamState","audioState","setAudioState","videoState","setVideoState","peerList","mediaConstraints","audio","video","height","startStream","navigator","mediaDevices","getUserMedia","then","stream","myVideo","document","getElementById","srcObject","setAudioMuteState","setVideoMuteState","catch","error","console","log","flag","muteIcon","localStream","getAudioTracks","forEach","track","enabled","vidMuteIcon","getVideoTracks","readyForStream","event","preventDefault","trim","emit","handleReadyForStreamSuccess","handleUserJoin","sid","peerId","peerName","undefined","addVideoElement","element_id","display_name","videoElement","makeVideoElementCustom","appendChild","vid","createElement","id","autoplay","on","off","children","onSubmit","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","type","autoPlay","playsInline","onClick","_c","$RefreshReg$"],"sources":["/Users/johyeonmin/Documents/fastapi-socketio-wb38-main/web/src/page/stream.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction Stream({ socket }) {\n  // 상태 관리\n  const [roomName, setRoomName] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [streamState, setStreamState] = useState(false);\n  const [audioState, setAudioState] = useState(true);\n  const [videoState, setVideoState] = useState(true);\n  let peerList = [];\n\n  // 미디어 제약 조건 정의\n  const mediaConstraints = {\n    audio: true,\n    video: {\n      height: 360,\n    },\n  };\n\n  // 스트림 시작 함수\n  const startStream = () => {\n    navigator.mediaDevices\n      .getUserMedia(mediaConstraints)\n      .then((stream) => {\n        const myVideo = document.getElementById(\"local_vid\");\n        myVideo.srcObject = stream;\n        setStreamState(true);\n        setAudioMuteState(!audioState);\n        setVideoMuteState(!videoState);\n      })\n      .catch((error) => {\n        console.log(`startStream Error ${error}`);\n      });\n  };\n\n  // 오디오 음소거 설정 함수\n  const setAudioMuteState = (flag) => {\n    let muteIcon = document.getElementById(\"aud_mute_icon\");\n    if (muteIcon) {\n      let localStream = document.getElementById(\"local_vid\").srcObject;\n      localStream.getAudioTracks().forEach((track) => {\n        track.enabled = !flag;\n      });\n\n      setAudioState(flag);\n    }\n  };\n\n  // 비디오 음소거 설정 함수\n  const setVideoMuteState = (flag) => {\n    let vidMuteIcon = document.getElementById(\"vid_mute_icon\");\n    if (vidMuteIcon) {\n      let localStream = document.getElementById(\"local_vid\").srcObject;\n      localStream.getVideoTracks().forEach((track) => {\n        track.enabled = !flag;\n      });\n\n      setVideoState(flag);\n    }\n  };\n\n  // 스트림 준비 이벤트 핸들러\n  const readyForStream = (event) => {\n    event.preventDefault();\n\n    startStream();\n\n    if (roomName.trim() && userName.trim()) {\n      socket.emit(\"readyForStream\", roomName, userName);\n    }\n  };\n\n  // useEffect를 사용하여 소켓 이벤트 핸들러 설정\n  useEffect(() => {\n    const handleReadyForStreamSuccess = ({ roomName }) => {\n      console.log(\"ready for stream success\");\n      console.log(roomName);\n      socket.emit(\"join_room\", roomName);\n    };\n\n    const handleUserJoin = ({ sid, userName }) => {\n      if (sid) {\n        console.log(`user join: ${sid}, ${userName}`);\n        let peerId = sid;\n        let peerName = userName;\n        peerList[peerId] = undefined;\n        addVideoElement(peerId, peerName);\n      } else {\n        console.error(\"Invalid data structure or missing 'sid' property\");\n      }\n    };\n\n    // 비디오 엘리먼트 추가 함수\n    function addVideoElement(element_id, display_name) {\n      const videoElement = makeVideoElementCustom(element_id, display_name);\n      document.getElementById(\"video_grid\").appendChild(videoElement);\n    }\n\n    // 커스텀 비디오 엘리먼트 생성 함수\n    function makeVideoElementCustom(element_id, display_name) {\n      let vid = document.createElement(\"video\");\n      vid.id = \"vid_\" + element_id;\n      vid.autoplay = true;\n      return vid;\n    }\n\n    // 소켓 이벤트 리스너 등록\n    socket.on(\"readyForStreamSuccess\", handleReadyForStreamSuccess);\n    socket.on(\"user_join\", handleUserJoin);\n\n    // 컴포넌트 언마운트 시 리스너 제거\n    return () => {\n      socket.off(\"readyForStreamSuccess\", handleReadyForStreamSuccess);\n    };\n  }, [socket]); // socket이 변경될 때마다 useEffect 실행\n\n  // JSX 반환\n  return (\n    <div>\n      {/* 폼 및 입력 필드 */}\n      <form onSubmit={readyForStream}>\n        <input value={roomName} onChange={(e) => setRoomName(e.target.value)} />\n        <input value={userName} onChange={(e) => setUserName(e.target.value)} />\n        <button type=\"submit\">Join!</button>\n      </form>\n\n      {/* 비디오 그리드 */}\n      <div id=\"video_grid\">{/* 비디오 요소가 여기에 추가됩니다 */}</div>\n\n      {/* 로컬 비디오 요소 */}\n      <video id=\"local_vid\" autoPlay playsInline />\n\n      {/* 오디오 음소거 버튼 */}\n      <button id=\"aud_mute_icon\" onClick={() => setAudioMuteState(!audioState)}>\n        {audioState ? \"Unmute Audio\" : \"Mute Audio\"}\n      </button>\n\n      {/* 비디오 음소거 버튼 */}\n      <button id=\"vid_mute_icon\" onClick={() => setVideoMuteState(!videoState)}>\n        {videoState ? \"unMute Video\" : \"Mute Video\"}\n      </button>\n    </div>\n  );\n}\n\nexport default Stream;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}