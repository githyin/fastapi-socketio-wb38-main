{"ast":null,"code":"var _jsxFileName = \"/Users/johyeonmin/Documents/fastapi-socketio-wb38-main/web/src/page/stream.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Stream({\n  socket\n}) {\n  _s();\n  const [roomName, setRoomName] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [cameraState, setCameraState] = useState(true);\n  useEffect(() => {\n    const handleReadyForStreamSuccess = ({\n      roomName\n    }) => {\n      console.log(\"ready for stream success\");\n      console.log(roomName);\n      socket.emit(\"join_room\", roomName);\n    };\n    socket.on(\"readyForStreamSuccess\", handleReadyForStreamSuccess);\n    socket.on(\"user_join\", data => {\n      console.log(\"New user join\", data.sid, data.roomName);\n      let peer_id = data[\"sid\"];\n      let userName = data[\"name\"];\n      _peer_list[peer_id] = undefined;\n    });\n\n    // useEffect의 cleanup 함수를 사용하여 컴포넌트가 언마운트될 때 리스너를 제거\n    return () => {\n      socket.off(\"readyForStreamSuccess\", handleReadyForStreamSuccess);\n    };\n  }, [socket]); // socket이 변경될 때마다 useEffect를 다시 실행\n\n  const readyForStream = event => {\n    event.preventDefault();\n    startCamera();\n    if (roomName.trim() && userName.trim()) {\n      socket.emit(\"readyForStream\", roomName, userName);\n    }\n  };\n  function startCamera() {\n    navigator.mediaDevices.getUserMedia(mediaConstraints).then(stream => {\n      myVideo.srcObject = stream;\n      camera_allowed = true;\n      setAudioMuteState(audioMuted);\n      setVideoMuteState(videoMuted);\n      //start the socketio connection\n      socket.connect();\n    }).catch(e => {\n      console.log(\"getUserMedia Error! \", e);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: readyForStream,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: roomName,\n        onChange: e => setRoomName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: userName,\n        onChange: e => setUserName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Join!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(Stream, \"oPFNueUMbfkO069rb9E56POGj+M=\");\n_c = Stream;\nexport default Stream;\nvar _c;\n$RefreshReg$(_c, \"Stream\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Stream","socket","_s","roomName","setRoomName","userName","setUserName","cameraState","setCameraState","handleReadyForStreamSuccess","console","log","emit","on","data","sid","peer_id","_peer_list","undefined","off","readyForStream","event","preventDefault","startCamera","trim","navigator","mediaDevices","getUserMedia","mediaConstraints","then","stream","myVideo","srcObject","camera_allowed","setAudioMuteState","audioMuted","setVideoMuteState","videoMuted","connect","catch","e","children","onSubmit","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/Users/johyeonmin/Documents/fastapi-socketio-wb38-main/web/src/page/stream.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction Stream({ socket }) {\n  const [roomName, setRoomName] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [cameraState, setCameraState] = useState(true);\n\n  useEffect(() => {\n    const handleReadyForStreamSuccess = ({ roomName }) => {\n      console.log(\"ready for stream success\");\n      console.log(roomName);\n      socket.emit(\"join_room\", roomName);\n    };\n\n    socket.on(\"readyForStreamSuccess\", handleReadyForStreamSuccess);\n\n    socket.on(\"user_join\", (data) => {\n      console.log(\"New user join\", data.sid, data.roomName);\n      let peer_id = data[\"sid\"];\n      let userName = data[\"name\"];\n      _peer_list[peer_id] = undefined;\n    });\n\n    // useEffect의 cleanup 함수를 사용하여 컴포넌트가 언마운트될 때 리스너를 제거\n    return () => {\n      socket.off(\"readyForStreamSuccess\", handleReadyForStreamSuccess);\n    };\n  }, [socket]); // socket이 변경될 때마다 useEffect를 다시 실행\n\n  const readyForStream = (event) => {\n    event.preventDefault();\n\n    startCamera();\n\n    if (roomName.trim() && userName.trim()) {\n      socket.emit(\"readyForStream\", roomName, userName);\n    }\n  };\n\n  function startCamera() {\n    navigator.mediaDevices\n      .getUserMedia(mediaConstraints)\n      .then((stream) => {\n        myVideo.srcObject = stream;\n        camera_allowed = true;\n        setAudioMuteState(audioMuted);\n        setVideoMuteState(videoMuted);\n        //start the socketio connection\n        socket.connect();\n      })\n      .catch((e) => {\n        console.log(\"getUserMedia Error! \", e);\n      });\n  }\n\n  return (\n    <div>\n      <form onSubmit={readyForStream}>\n        <input value={roomName} onChange={(e) => setRoomName(e.target.value)} />\n        <input value={userName} onChange={(e) => setUserName(e.target.value)} />\n        <button type=\"submit\">Join!</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Stream;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}