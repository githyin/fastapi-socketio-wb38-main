{"ast":null,"code":"var _jsxFileName = \"/Users/johyeonmin/Documents/fastapi-socketio-wb38-main/web/src/page/stream.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Stream({\n  socket\n}) {\n  _s();\n  const [roomName, setRoomName] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [cameraState, setCameraState] = useState(false);\n  const [audioState, setAudioState] = useState(false);\n  const mediaConstraints = {\n    audio: true,\n    video: {\n      height: 360\n    }\n  };\n  const startCamera = () => {\n    navigator.mediaDevices.getUserMedia(mediaConstraints).then(stream => {\n      const myVideo = document.getElementById(\"local_vid\");\n      myVideo.srcObject = stream;\n      setCameraState(true);\n      setAudioMuteState(audioState);\n      setVideoMuteState(videoState);\n    }).catch(error => {\n      console.log(`startCamera Error ${error}`);\n    });\n  };\n  const setAudioMuteState = flag => {\n    let localStream = document.getElementById(\"local_vid\").srcObject;\n    localStream.getAudioTracks().forEach(track => {\n      track.enabled = !flag;\n    });\n    // switch button icon\n    document.getElementById(\"mute_icon\").innerText = flag ? \"mic_off\" : \"mic\";\n  };\n  const setVideoMuteState = flag => {\n    let localStream = document.getElementById(\"local_vid\").srcObject;\n    localStream.getVideoTracks().forEach(track => {\n      track.enabled = !flag;\n    });\n    // switch button icon\n    document.getElementById(\"vid_mute_icon\").innerText = flag ? \"videocam_off\" : \"videocam\";\n  };\n  const readyForStream = event => {\n    event.preventDefault();\n    startCamera();\n    if (roomName.trim() && userName.trim()) {\n      socket.emit(\"readyForStream\", roomName, userName);\n    }\n  };\n  useEffect(() => {\n    const handleReadyForStreamSuccess = ({\n      roomName\n    }) => {\n      console.log(\"ready for stream success\");\n      console.log(roomName);\n      socket.emit(\"join_room\", roomName);\n    };\n    const handleUserJoin = data => {\n      console.log(\"New user join\", data.sid, data.roomName);\n      let peer_id = data[\"sid\"];\n      let userName = data[\"name\"];\n      _peer_list[peer_id] = undefined;\n    };\n    socket.on(\"readyForStreamSuccess\", handleReadyForStreamSuccess);\n    socket.on(\"user_join\", handleUserJoin);\n\n    // useEffect의 cleanup 함수를 사용하여 컴포넌트가 언마운트될 때 리스너를 제거\n    return () => {\n      socket.off(\"readyForStreamSuccess\", handleReadyForStreamSuccess);\n      socket.off(\"user_join\", handleUserJoin);\n    };\n  }, [socket]); // socket이 변경될 때마다 useEffect를 다시 실행\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: readyForStream,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: roomName,\n        onChange: e => setRoomName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: userName,\n        onChange: e => setUserName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Join!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      id: \"local_vid\",\n      autoPlay: true,\n      muted: true,\n      playsInline: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(Stream, \"B1h2uRT+ySjvI7cgzZ+S7CmyEFc=\");\n_c = Stream;\nexport default Stream;\nvar _c;\n$RefreshReg$(_c, \"Stream\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Stream","socket","_s","roomName","setRoomName","userName","setUserName","cameraState","setCameraState","audioState","setAudioState","mediaConstraints","audio","video","height","startCamera","navigator","mediaDevices","getUserMedia","then","stream","myVideo","document","getElementById","srcObject","setAudioMuteState","setVideoMuteState","videoState","catch","error","console","log","flag","localStream","getAudioTracks","forEach","track","enabled","innerText","getVideoTracks","readyForStream","event","preventDefault","trim","emit","handleReadyForStreamSuccess","handleUserJoin","data","sid","peer_id","_peer_list","undefined","on","off","children","onSubmit","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","type","id","autoPlay","muted","playsInline","_c","$RefreshReg$"],"sources":["/Users/johyeonmin/Documents/fastapi-socketio-wb38-main/web/src/page/stream.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction Stream({ socket }) {\n  const [roomName, setRoomName] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [cameraState, setCameraState] = useState(false);\n  const [audioState, setAudioState] = useState(false);\n\n  const mediaConstraints = {\n    audio: true,\n    video: {\n      height: 360,\n    },\n  };\n\n  const startCamera = () => {\n    navigator.mediaDevices\n      .getUserMedia(mediaConstraints)\n      .then((stream) => {\n        const myVideo = document.getElementById(\"local_vid\");\n        myVideo.srcObject = stream;\n        setCameraState(true);\n        setAudioMuteState(audioState);\n        setVideoMuteState(videoState);\n      })\n      .catch((error) => {\n        console.log(`startCamera Error ${error}`);\n      });\n  };\n\n  const setAudioMuteState = (flag) => {\n    let localStream = document.getElementById(\"local_vid\").srcObject;\n    localStream.getAudioTracks().forEach((track) => {\n      track.enabled = !flag;\n    });\n    // switch button icon\n    document.getElementById(\"mute_icon\").innerText = flag ? \"mic_off\" : \"mic\";\n  };\n\n  const setVideoMuteState = (flag) => {\n    let localStream = document.getElementById(\"local_vid\").srcObject;\n    localStream.getVideoTracks().forEach((track) => {\n      track.enabled = !flag;\n    });\n    // switch button icon\n    document.getElementById(\"vid_mute_icon\").innerText = flag\n      ? \"videocam_off\"\n      : \"videocam\";\n  };\n\n  const readyForStream = (event) => {\n    event.preventDefault();\n\n    startCamera();\n\n    if (roomName.trim() && userName.trim()) {\n      socket.emit(\"readyForStream\", roomName, userName);\n    }\n  };\n\n  useEffect(() => {\n    const handleReadyForStreamSuccess = ({ roomName }) => {\n      console.log(\"ready for stream success\");\n      console.log(roomName);\n      socket.emit(\"join_room\", roomName);\n    };\n\n    const handleUserJoin = (data) => {\n      console.log(\"New user join\", data.sid, data.roomName);\n      let peer_id = data[\"sid\"];\n      let userName = data[\"name\"];\n      _peer_list[peer_id] = undefined;\n    };\n\n    socket.on(\"readyForStreamSuccess\", handleReadyForStreamSuccess);\n    socket.on(\"user_join\", handleUserJoin);\n\n    // useEffect의 cleanup 함수를 사용하여 컴포넌트가 언마운트될 때 리스너를 제거\n    return () => {\n      socket.off(\"readyForStreamSuccess\", handleReadyForStreamSuccess);\n      socket.off(\"user_join\", handleUserJoin);\n    };\n  }, [socket]); // socket이 변경될 때마다 useEffect를 다시 실행\n\n  return (\n    <div>\n      <form onSubmit={readyForStream}>\n        <input value={roomName} onChange={(e) => setRoomName(e.target.value)} />\n        <input value={userName} onChange={(e) => setUserName(e.target.value)} />\n        <button type=\"submit\">Join!</button>\n      </form>\n      {/* 비디오를 표시할 비디오 요소 */}\n      <video id=\"local_vid\" autoPlay muted playsInline />\n      {/* 기타 컴포넌트 내용 추가 */}\n    </div>\n  );\n}\n\nexport default Stream;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}