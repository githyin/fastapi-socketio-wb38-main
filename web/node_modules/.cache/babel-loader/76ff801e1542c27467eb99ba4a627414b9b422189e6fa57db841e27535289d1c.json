{"ast":null,"code":"var _jsxFileName = \"/Users/johyeonmin/Documents/fastapi-socketio-wb38-main/web/src/page/upload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from \"react\";\nimport { Card, CardContent, Typography, makeStyles, Button } from \"@material-ui/core\";\nimport { useDropzone } from \"react-dropzone\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: 600\n  },\n  title: {\n    fontSize: 21,\n    color: \"black\"\n  },\n  dropzone: {\n    border: \"2px dashed #eeeeee\",\n    borderRadius: \"5px\",\n    padding: \"30px\",\n    textAlign: \"center\",\n    color: \"#bdbdbd\",\n    cursor: \"pointer\"\n  }\n});\nfunction Upload() {\n  _s();\n  const classes = useStyles();\n  const [files, setFiles] = useState([]);\n  const [uploadStatus, setUploadStatus] = useState(\"\");\n  const onDrop = useCallback(acceptedFiles => {\n    setFiles(acceptedFiles);\n    setUploadStatus(`${acceptedFiles.length} file(s) selected. Ready to upload.`);\n  }, []);\n  const handleUpload = async () => {\n    // 파일이 선택되지 않았을 경우 경고 메시지를 설정하고 함수 실행을 중단합니다.\n    if (!files.length) {\n      setUploadStatus(\"Please select a file to upload.\");\n      return;\n    }\n\n    // 파일이 선택되었을 경우, 업로드 프로세스를 진행합니다.\n    const formData = new FormData();\n    files.forEach(file => {\n      formData.append(\"files\", file);\n    });\n    try {\n      const response = await axios.post(\"http://localhost:8000/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      // 업로드 성공 시 메시지를 설정합니다.\n      setUploadStatus(\"File uploaded successfully!\");\n      setFiles([]); // 현재 선택된 파일 목록을 초기화합니다.\n      console.log(response.data);\n    } catch (error) {\n      // 업로드 중 오류가 발생했을 경우 메시지를 설정합니다.\n      setUploadStatus(\"Error during upload. Please try again.\");\n      console.error(\"Error uploading file:\", error.response ? error.response.data : error.message);\n    }\n  };\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop,\n    multiple: true\n  });\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.title,\n        color: \"textSecondary\",\n        gutterBottom: true,\n        children: \"Upload Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ...getRootProps(),\n        className: classes.dropzone,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag 'n' drop some files here, or click to select files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [file.name, \" (\", (file.size / 1024).toFixed(2), \" KB)\"]\n          }, file.path, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: handleUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"textSecondary\",\n        children: uploadStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(Upload, \"37HGFu5m6TWW4MsgtENDfmxPoMw=\", false, function () {\n  return [useStyles, useDropzone];\n});\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useCallback","useState","Card","CardContent","Typography","makeStyles","Button","useDropzone","axios","jsxDEV","_jsxDEV","useStyles","root","position","top","left","transform","width","title","fontSize","color","dropzone","border","borderRadius","padding","textAlign","cursor","Upload","_s","classes","files","setFiles","uploadStatus","setUploadStatus","onDrop","acceptedFiles","length","handleUpload","formData","FormData","forEach","file","append","response","post","headers","console","log","data","error","message","getRootProps","getInputProps","multiple","className","children","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","map","name","size","toFixed","path","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/johyeonmin/Documents/fastapi-socketio-wb38-main/web/src/page/upload.jsx"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport {\n  Card,\n  CardContent,\n  Typography,\n  makeStyles,\n  Button,\n} from \"@material-ui/core\";\nimport { useDropzone } from \"react-dropzone\";\nimport axios from \"axios\";\n\nconst useStyles = makeStyles({\n  root: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: 600,\n  },\n  title: {\n    fontSize: 21,\n    color: \"black\",\n  },\n  dropzone: {\n    border: \"2px dashed #eeeeee\",\n    borderRadius: \"5px\",\n    padding: \"30px\",\n    textAlign: \"center\",\n    color: \"#bdbdbd\",\n    cursor: \"pointer\",\n  },\n});\n\nfunction Upload() {\n  const classes = useStyles();\n  const [files, setFiles] = useState([]);\n  const [uploadStatus, setUploadStatus] = useState(\"\");\n\n  const onDrop = useCallback((acceptedFiles) => {\n    setFiles(acceptedFiles);\n    setUploadStatus(\n      `${acceptedFiles.length} file(s) selected. Ready to upload.`\n    );\n  }, []);\n\n  const handleUpload = async () => {\n    // 파일이 선택되지 않았을 경우 경고 메시지를 설정하고 함수 실행을 중단합니다.\n    if (!files.length) {\n      setUploadStatus(\"Please select a file to upload.\");\n      return;\n    }\n\n    // 파일이 선택되었을 경우, 업로드 프로세스를 진행합니다.\n    const formData = new FormData();\n    files.forEach((file) => {\n      formData.append(\"files\", file);\n    });\n\n    try {\n      const response = await axios.post(\n        \"http://localhost:8000/upload\",\n        formData,\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        }\n      );\n      // 업로드 성공 시 메시지를 설정합니다.\n      setUploadStatus(\"File uploaded successfully!\");\n      setFiles([]); // 현재 선택된 파일 목록을 초기화합니다.\n      console.log(response.data);\n    } catch (error) {\n      // 업로드 중 오류가 발생했을 경우 메시지를 설정합니다.\n      setUploadStatus(\"Error during upload. Please try again.\");\n      console.error(\n        \"Error uploading file:\",\n        error.response ? error.response.data : error.message\n      );\n    }\n  };\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop,\n    multiple: true,\n  });\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography\n          className={classes.title}\n          color=\"textSecondary\"\n          gutterBottom\n        >\n          Upload Video\n        </Typography>\n        <div {...getRootProps()} className={classes.dropzone}>\n          <input {...getInputProps()} />\n          <p>Drag 'n' drop some files here, or click to select files</p>\n          <div>\n            {files.map((file) => (\n              <div key={file.path}>\n                {file.name} ({(file.size / 1024).toFixed(2)} KB)\n              </div>\n            ))}\n          </div>\n        </div>\n        <Button variant=\"contained\" color=\"secondary\" onClick={handleUpload}>\n          Upload\n        </Button>\n        <Typography color=\"textSecondary\">{uploadStatus}</Typography>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default Upload;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}